name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
        
  # deploy-infrastructure:
    
  #   runs-on: ubuntu-latest

  #   steps: 
  #   - uses: actions/checkout@master
  #   - uses: Azure/login@v1
  #     with:
  #       creds: ${{ secrets.DEVELOP_AZURECREDENTIALS }} 
  #       enable-AzPSSession: true 
  #   - uses: azure/powershell@v1
  #     with:
  #       inlineScript: |
  #         $ResourceGroupLocation = "eastus"
          
  #         $ResourceGroupName = "mjr-066-001-rg"
  #         $ResourceGroup = (Get-AzResourceGroup -Name $ResourceGroupName -ErrorAction SilentlyContinue)
          
  #         if ($null -eq $ResourceGroup) {
  #             $ResourceGroup = (New-AzResourceGroup `
  #                 -Name $ResourceGroupName `
  #                 -Location $ResourceGroupLocation)
  #         }
  #       azPSVersion: '3.1.0'        
  #   - uses: azure/arm-deploy@v1
  #     with:
  #       subscriptionId: ${{ secrets.DEVELOP_SUBSCRIPTIONID }}
  #       resourceGroupName: mjr-066-001-rg
  #       template: ./Deploy.json
  #       parameters: resourcePrefix=mjr-066-001
        
  # deploy-code:

  #   needs: deploy-infrastructure
  #   runs-on: ubuntu-latest

  #   steps:
  #    - uses: actions/checkout@v2
  #    - name: Setup .NET Core
  #      uses: actions/setup-dotnet@v1
  #      with:
  #        dotnet-version: 3.1.301       
  #    - name: 'Run dotnet'
  #      shell: pwsh
  #      run: |
  #        pushd './.'
  #        dotnet build --configuration Release --output ./output
  #        popd
  #    - uses: Azure/login@v1
  #      with:
  #        creds: ${{ secrets.DEVELOP_AZURECREDENTIALS }} 
  #        enable-AzPSSession: true 
  #    - name: 'Deploy code'
  #      uses: Azure/functions-action@v1
  #      with:
  #        app-name: mjr-066-001-func
  #        package: './output'
  
  run-integration-tests:
  
    # needs: deploy-code
    runs-on: ubuntu-latest

    steps:  
    - uses: actions/checkout@master
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.DEVELOP_AZURECREDENTIALS }} 
        enable-AzPSSession: true 
    - uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: "mjr-066-001-kv"
        secrets: 'FunctionApp1Code' 
      id: GetSecrets
    - name: Create parameters file
      run: pwsh -command "RunIntegrationTests_CreateParametersFile.ps1 -FunctionUrl '' -FunctionApp1Code ''"
    